---
title: "Lead Project"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(janitor)
library(here)
```

-   Read in the `stl_lead.csv` data as `stl_lead` and use janitor::clean_names to convert all variable names to lower snake case

-   Do some basic exploration of the dataset (e.g. using summary, data visualizations and summary statistics).

```{r}
stl_lead <- read_csv(here::here("data", "stl_lead.csv")) %>% 
  clean_names()

# basic visualization 

ggplot(data = stl_lead,
       aes(x = pct_elevated,
           y = white)) +
  geom_point()

ggplot(data = stl_lead,
       aes(x = pct_elevated,
           y = black)) +
  geom_point()
```

-   In a new code chunk, from `stl_lead` create a new data frame called `stl_lead_prop` that has one additional column called `prop_white` that returns the percent of each census tract identifying as white (variable `white` in the dataset divided by variable `totalPop`, times 100). You may need to do some Googling. Hint: `dplyr::mutate(new_col = col_a / col_b)` will create a new column `new_col` that contains the value of `col_a / col_b`

```{r}
stl_lead_prop <- stl_lead %>% 
  mutate(prop_white = (white/total_pop) * 100) # added new column 
```

-   In a new code chunk, create a scatterplot graph of the percentage of children in each census tract with elevated blood lead levels (`pctElevated`) versus the percent of each census tract identifying as white. Customize by updating several aesthetics (e.g. size, opacity (see `alpha =`), color, etc.). Store the scatterplot as `stl_lead_plot.`Have the scatterplot returned in the knitted html - customize the size that it appears when knitted

-   Also save a .png of the scatterplot to `figs`, with dimensions of (6\" x 5\") (width x height)

-   In text above or below the scatterplot, write 1 - 2 sentences describing the overall trend that you observe from your graph

```{r}
stl_lead_plot <- ggplot(data = stl_lead_prop, 
       aes(x = prop_white, 
           y = pct_elevated, 
           color = prop_white)) +
  geom_point() +
  theme_classic() +
  labs(x = "Proportion of White Children", 
       y = "Elevated Lead Blood Levels",
       caption = "This graph shows a correlation between race and elevated lead in blood levels. As the propostion of white children in the census increases, blood lead levels decrease.") +
  scale_color_gradient(low = "blue", high = "yellow") +
  theme(plot.caption = element_text(hjust = 0.5,
                                    size = 6))

stl_lead_plot

ggsave(plot = stl_lead_plot,
       path = here::here("figs"), "stl_lead_plot.png",
       width = 6, height = 5)
```

-   Create a histogram of only the `pctElevated` column in the data frame (remember, this will only take one variable - the frequency is calculated for you by `geom_histogram`)

-   Customize the fill, color, and size aesthetics - test some stuff! Feel free to make it awful.

-   Once you\'ve played around with customization, export the histogram as a .jpg to the `figs` folder

-   Make sure the histogram also shows up in your rendered html

```{r}
lead_histo <- ggplot(data = stl_lead_prop,
       aes(x = pct_elevated)) +
  geom_histogram(fill = "lightsteelblue3",
                 color = "black",
                 size = 0.2) +
  labs(x = "Elevated Lead Blood Levels",
       y = " ") +
  theme_classic() +
  scale_y_continuous(expand = c(0,0)) # bars start on x-axis floor

lead_histo

ggsave(plot = lead_histo,
       path = here::here("figs"), "lead_histo.jpg",
       width = 12, height = 12)
```
